delete=删除
properties=属性
#custom
usedDate=使用日期 $DATE$
openDir=打开目录
sortLastUsed=按最后使用日期排序
#custom
sortAlphabetical=按名称字母顺序排序
#custom
sortIndexed=按索引顺序排序
#custom
restartDescription=重启通常可以快速解决问题
reportIssue=报告问题
#custom
reportIssueDescription=打开内置问题报告工具
#custom
usefulActions=常用操作
#custom
stored=已保存
#custom
troubleshootingOptions=故障排查工具
#custom
troubleshoot=排查问题
remote=远程文件
#custom
addShellStore=添加 Shell ...
#custom
addShellTitle=添加 Shell 连接
#custom
savedConnections=已保存的连接
save=保存
#custom
clean=清理
moveTo=移动到 ...
#custom
addDatabase=数据库 ...
browseInternalStorage=浏览内部存储
addTunnel=隧道 ...
addService=服务 ...
addScript=脚本 ...
addHost=远程主机 ...
#custom
addShell=添加 Shell 环境 ...
addCommand=命令 ...
addAutomatically=自动搜索 ...
addOther=添加其他 ...
connectionAdd=添加连接
scriptAdd=添加脚本
scriptGroupAdd=添加脚本组
identityAdd=添加身份
#custom
new=新建
selectType=选择类型
selectTypeDescription=选择连接类型
#custom
selectShellType=Shell 类型
#custom
selectShellTypeDescription=选择 Shell 连接的类型
name=名称
#custom
storeIntroTitle=连接中心
#custom
storeIntroDescription=在此，您可以在同一位置管理所有本地和远程的 Shell 连接。首先，您可以快速自动检测可用的连接，并选择要添加的项。
detectConnections=搜索连接 ...
dragAndDropFilesHere=或直接将文件拖放到此处
confirmDsCreationAbortTitle=确认中止
#custom
confirmDsCreationAbortHeader=确定要放弃创建数据源吗？
confirmDsCreationAbortContent=任何数据源创建进度都将丢失。
confirmInvalidStoreTitle=跳过验证
confirmInvalidStoreContent=您想跳过连接验证吗？即使无法验证，您也可以添加此连接，稍后再修复连接问题。
expand=扩展
accessSubConnections=访问子连接
common=常见
color=颜色
alwaysConfirmElevation=始终确认权限提升
#custom
alwaysConfirmElevationDescription=控制在系统上运行命令（如使用 sudo）时权限提升的处理方式。默认情况下，会话期间会缓存 sudo 凭据，并在需要时自动提供。若启用该选项，每次都将要求您确认权限提升。
allow=允许
ask=询问
deny=拒绝
#custom
share=添加到 Git 仓库
#custom
unshare=从 Git 仓库移除
#custom
remove=移除
createNewCategory=新子类别
prompt=提示
customCommand=自定义命令
other=其他
setLock=设置锁定
selectConnection=选择连接
createLock=创建口令
#custom
changeLock=更改锁定密码
test=测试
finish=完成
error=发生错误
#custom
downloadStageDescription=将已下载文件移入系统下载目录后再打开。
#custom
ok=确定
search=搜索
repeatPassword=重复密码
#custom
askpassAlertTitle=输入密码
unsupportedOperation=不支持的操作：$MSG$
#custom
fileConflictAlertTitle=文件冲突
#custom
fileConflictAlertContent=目标系统已存在文件 $FILE$。
#custom
fileConflictAlertContentMultiple=文件 $FILE$ 已经存在。可能还有更多冲突，您可以选择一个适用于所有冲突的选项来自动解决。
moveAlertTitle=确认移动
#custom
moveAlertHeader=确定要将 $COUNT$ 个选定元素移动到 $TARGET$ 吗？
deleteAlertTitle=确认删除
#custom
deleteAlertHeader=确定要删除 $COUNT$ 个选定元素吗？
#custom
selectedElements=选定的元素：
#custom
mustNotBeEmpty=$VALUE$ 不能为空
#custom
valueMustNotBeEmpty=值不能为空
transferDescription=拖动文件到此处下载
dragLocalFiles=从此处拖动下载
null=$VALUE$ 必须为非空
roots=根
scripts=脚本
searchFilter=搜索...
recent=最近使用
shortcut=快捷方式
#custom
browserWelcomeEmptyHeader=文件管理器
#custom
browserWelcomeEmptyContent=您可以在左侧选择要在文件管理器中打开的系统。XPipe 会记住您以前访问过的系统和目录，并在以后的快速访问菜单中显示出来。
#custom
browserWelcomeEmptyButton=打开本地文件管理器
browserWelcomeSystems=您最近连接了以下系统：
browserWelcomeDocsHeader=文档
browserWelcomeDocsContent=如果您更喜欢在指导下熟悉 XPipe，请访问文档网站。
#custom
browserWelcomeDocsButton=打开文档
hostFeatureUnsupported=$FEATURE$ 主机上未安装
missingStore=$NAME$ 不存在
connectionName=连接名称
connectionNameDescription=为该连接自定义名称
openFileTitle=打开文件
unknown=未知
scanAlertTitle=添加连接
scanAlertChoiceHeader=目标
#custom
scanAlertChoiceHeaderDescription=选择搜索连接的位置，系统会先查找所有可用连接。
scanAlertHeader=连接类型
#custom
scanAlertHeaderDescription=选择为系统自动添加的连接类型。
noInformationAvailable=无可用信息
yes=是
#custom
no=否
errorOccured=发生错误
#custom
terminalErrorOccured=终端发生错误
#custom
errorTypeOccured=抛出了类型为 $TYPE$ 的异常
permissionsAlertTitle=所需权限
permissionsAlertHeader=执行此操作需要额外权限。
permissionsAlertContent=请根据弹出窗口在设置菜单中赋予 XPipe 所需的权限。
errorDetails=错误详情
#custom
updateReadyAlertTitle=更新可安装
#custom
updateReadyAlertHeader=$VERSION$ 版本更新已准备好安装
#custom
updateReadyAlertContent=将安装新版本，安装完成后 XPipe 将自动重启。
#custom
errorNoDetail=无可用错误详细信息
#custom
updateAvailableTitle=发现新版本
#custom
updateAvailableContent=可更新至 $VERSION$。即使 XPipe 无法启动，也可尝试安装以解决潜在问题。
clipboardActionDetectedTitle=检测到剪贴板操作
clipboardActionDetectedContent=XPipe 在剪贴板中检测到可打开的内容。您想现在打开吗？您想导入剪贴板内容吗？
install=安装 ...
ignore=忽略
possibleActions=可用操作
#custom
reportError=提交错误报告
#custom
reportOnGithub=在 GitHub 上提交问题报告
#custom
reportOnGithubDescription=在 GitHub 仓库中创建一个新问题
#custom
reportErrorDescription=发送包含可选用户反馈与诊断信息的错误报告
#custom
ignoreError=忽略该错误
#custom
ignoreErrorDescription=忽略该错误并继续运行
provideEmail=我们如何与您联系（可选，仅在您希望得到回复时）。您的报告默认为匿名，因此您可以在此处提供电子邮件地址等联系信息。
additionalErrorInfo=提供附加信息（可选）
additionalErrorAttachments=选择附件（可选）
dataHandlingPolicies=隐私政策
#custom
sendReport=提交报告
errorHandler=错误处理程序
events=活动
validate=验证
#custom
stackTrace=堆栈追踪
#custom
previousStep=< 上一步
#custom
nextStep=下一步 >
finishStep=完成
select=选择
#custom
browseInternal=浏览内部
#custom
checkOutUpdate=查看更新
quit=退出
#custom
noTerminalSet=未检测到终端程序，可在设置中手动指定。
connections=连接
connectionHub=连接中心
settings=设置
#custom
explorePlans=查看许可证选项
help=帮助
about=关于
developer=开发人员
browseFileTitle=浏览文件
browser=文件浏览器
selectFileFromComputer=从本计算机选择文件
links=链接
website=网站
discordDescription=加入 Discord 服务器
redditDescription=加入 XPipe subreddit
security=安全性
securityPolicy=安全信息
securityPolicyDescription=阅读详细的安全策略
privacy=隐私政策
privacyDescription=阅读 XPipe 应用程序的隐私政策
slackDescription=加入 Slack 工作区
support=支持
githubDescription=查看 GitHub 仓库
openSourceNotices=开放源代码公告
checkForUpdates=检查更新
#custom
checkForUpdatesDescription=检查并下载可用更新
#custom
lastChecked=上次检查时间
version=版本
build=构建版本
#custom
runtimeVersion=运行时版本号
virtualMachine=虚拟机
updateReady=安装更新
#custom
updateReadyPortable=查看更新
updateReadyDescription=已下载更新并准备安装
updateReadyDescriptionPortable=可下载更新
#custom
updateRestart=重启以更新
never=从不
#custom
updateAvailableTooltip=有可用更新
#custom
ptbAvailableTooltip=公测版可用
visitGithubRepository=访问 GitHub 仓库
#custom
updateAvailable=有可用更新：$VERSION$
downloadUpdate=下载更新
#custom
legalAccept=我已阅读并接受最终用户许可协议
confirm=确认
print=打印
#custom
whatsNew=版本 $VERSION$ 新内容（$DATE$）
antivirusNoticeTitle=关于杀毒软件的说明
updateChangelogAlertTitle=更新日志
#custom
greetingsAlertTitle=欢迎使用 XPipe
eula=最终用户许可协议
news=新闻
introduction=简介
privacyPolicy=隐私政策
agree=同意
disagree=不同意
directories=目录
logFile=日志文件
logFiles=日志文件
logFilesAttachment=日志文件
issueReporter=问题报告器
#custom
openCurrentLogFile=打开当前日志文件
openCurrentLogFileDescription=打开当前会话的日志文件
openLogsDirectory=打开日志目录
installationFiles=安装文件
openInstallationDirectory=安装文件
openInstallationDirectoryDescription=打开 XPipe 安装目录
launchDebugMode=调试模式
launchDebugModeDescription=在调试模式下重启 XPipe
extensionInstallTitle=下载
extensionInstallDescription=该操作需要额外的第三方库，但 XPipe 未分发这些库。您可以在此处自动安装。然后从供应商网站下载组件：
extensionInstallLicenseNote=进行下载和自动安装即表示您同意第三方许可条款：
license=许可证
installRequired=安装要求
restore=恢复
restoreAllSessions=恢复所有会话
connectionTimeout=连接启动超时
connectionTimeoutDescription=连接超时前等待响应的时间（秒）。如果某些远程系统的连接时间较长，可以尝试增加此值。
useBundledTools=使用捆绑的 OpenSSH 工具
useBundledToolsDescription=优先使用捆绑版本的 openssh 客户端，而不是本地安装的客户端。\n\n该版本通常比系统中的版本更新，并可能支持更多功能。这也消除了首先安装这些工具的要求。
appearance=外观
integrations=集成
uiOptions=用户界面选项
theme=主题
rdpConfiguration=远程桌面配置
rdpClient=RDP 客户端
rdpClientDescription=启动 RDP 连接时调用的 RDP 客户端程序。\n\n请注意，各种客户端具有不同程度的能力和集成。有些客户端不支持自动传递密码，因此仍需在启动时填写。
#custom
localShell=本地 Shell
#custom
themeDescription=选择您的首选主题
dontAutomaticallyStartVmSshServer=需要时不自动为虚拟机启动 SSH 服务器
#custom
dontAutomaticallyStartVmSshServerDescription=与管理程序中运行的虚拟机建立的任何 Shell 连接都通过 SSH 进行。XPipe 可在需要时自动启动已安装的 SSH 服务器。若出于安全考虑不希望自动启动，可在此禁用。
confirmGitShareTitle=Git 同步
#custom
confirmGitShareContent=确定将所选文件添加到 Git 仓库吗？将复制其加密版本并提交，以便在所有已同步的桌面上访问。
#custom
gitShareFileTooltip=将文件添加到 Git 保险库数据目录以自动同步。\n\n此操作仅在设置中已启用 Git 保险库时可用。
performanceMode=性能模式
#custom
performanceModeDescription=关闭非必要视觉效果以提升性能
#custom
dontAcceptNewHostKeys=禁止自动信任新的 SSH 主机密钥
#custom
dontAcceptNewHostKeysDescription=若 SSH 客户端中不存在已知主机密钥，XPipe 默认自动接受系统返回的初始主机密钥；若已有主机密钥发生变化，则需显式确认，否则拒绝连接。\n\n禁用自动接受可强制对所有陌生主机密钥执行人工核实。
#custom
uiScale=界面缩放
#custom
uiScaleDescription=自定义界面缩放百分比（独立于系统缩放）。例如 150 表示放大到 150%。
#custom
editorProgram=默认编辑器程序
#custom
editorProgramDescription=用于编辑文本内容的默认编辑器程序
#custom
windowOpacity=窗口不透明度
#custom
windowOpacityDescription=调整不透明度以便同时关注后台内容
#custom
useSystemFont=使用系统字体
#custom
openDataDir=保险库数据目录
#custom
openDataDirButton=打开数据目录
#custom
openDataDirDescription=可将需同步的额外文件（如 SSH 密钥）放入此目录；在其他系统上路径引用会自动适配。
updates=更新
#custom
selectAll=全选
advanced=高级
thirdParty=开放源代码通知
eulaDescription=阅读 XPipe 应用程序的最终用户许可协议
thirdPartyDescription=查看第三方库的开源许可证
#custom
workspaceLock=工作区密码
#custom
enableGitStorage=启用 Git 同步
sharing=共享
gitSync=Git 同步
#custom
enableGitStorageDescription=启用后将为本地保险库初始化 Git 仓库并自动提交更改。需要已安装 Git，可能略微增加加载/保存时间。\n\n需要同步的类别需显式标记。
storageGitRemote=Git 远程 URL
#custom
storageGitRemoteDescription=配置远程仓库后：加载时自动拉取远程更改，保存时推送本地更改，实现多设备间共享保险库。支持 HTTP 与 SSH URL。\n\n可能略微降低加载/保存性能。
vault=保险库
#custom
workspaceLockDescription=设置自定义口令以加密存储在 XPipe 的敏感数据。\n\n提供额外一层保护，启动时需要输入口令才能解锁。
useSystemFontDescription=控制使用默认系统字体还是 XPipe 附带的 Inter 字体。
#custom
tooltipDelay=提示显示延迟
#custom
tooltipDelayDescription=等待提示显示的毫秒数。
fontSize=字体大小
windowOptions=窗口选项
saveWindowLocation=保存窗口位置
saveWindowLocationDescription=控制是否保存窗口坐标并在重启时恢复。
startupShutdown=启动/关闭
showChildrenConnectionsInParentCategory=在父类别中显示子类别
showChildrenConnectionsInParentCategoryDescription=当选择某个父类别时，是否包括位于子类别中的所有连接。\n\n如果禁用，类别的行为更像传统的文件夹，只显示其直接内容而不包括子文件夹。
condenseConnectionDisplay=压缩连接显示
condenseConnectionDisplayDescription=减少每个顶级连接的垂直空间，使连接列表更加简洁。
openConnectionSearchWindowOnConnectionCreation=在创建连接时打开连接搜索窗口
#custom
openConnectionSearchWindowOnConnectionCreationDescription=是否在添加新 Shell 连接时自动打开子连接搜索窗口。
workflow=工作流程
system=系统
application=应用程序
storage=存储
runOnStartup=启动时运行
#custom
closeBehaviour=关闭行为
#custom
closeBehaviourDescription=控制 XPipe 关闭主窗口后的处理方式。
language=语言
#custom
languageDescription=设置界面语言。\n\n当前翻译基于自动生成，并由社区贡献者优化。您可以在 GitHub 上提交改进建议。
lightTheme=灯光主题
darkTheme=深色主题
exit=退出 XPipe
continueInBackground=继续后台
#custom
minimizeToTray=最小化至系统托盘
closeBehaviourAlertTitle=设置关闭行为
closeBehaviourAlertTitleHeader=选择关闭窗口时应发生的情况。关闭程序时，任何活动连接都将被关闭。
#custom
startupBehaviour=启动设置
startupBehaviourDescription=控制 XPipe 启动时桌面应用程序的默认行为。
clearCachesAlertTitle=清除缓存
clearCachesAlertContent=您想清除所有 XPipe 缓存数据吗？这将删除为改善用户体验而存储的所有缓存数据。
startGui=启动图形用户界面
#custom
startInTray=最小化至托盘启动
startInBackground=后台启动
clearCaches=清除缓存...
clearCachesDescription=删除所有缓存数据
cancel=取消
notAnAbsolutePath=非绝对路径
notADirectory=不是目录
notAnEmptyDirectory=不是空目录
#custom
automaticallyCheckForUpdates=自动检查更新
automaticallyCheckForUpdatesDescription=启用后，XPipe 会在运行一段时间后自动获取新版本信息。您仍需明确确认任何更新安装。
sendAnonymousErrorReports=发送匿名错误报告
sendUsageStatistics=发送匿名使用统计数据
storageDirectory=存储目录
storageDirectoryDescription=XPipe 存储所有连接信息的位置。更改时，旧目录中的数据不会复制到新目录。
logLevel=日志级别
#custom
appBehaviour=应用程序设置
#custom
logLevelDescription=设置日志文件记录的级别。
#custom
developerMode=开发者模式
#custom
developerModeDescription=启用后，可访问开发相关的高级选项。
editor=编辑
custom=自定义
passwordManager=密码管理器
externalPasswordManager=外部密码管理器
#custom
passwordManagerDescription=与本地已安装的密码管理器集成。\n\n配置后，XPipe 在需要时调用命令检索密码而非本地保存；连接的密码字段可切换为“使用密码管理器”。
passwordManagerCommandTest=测试密码管理器
#custom
passwordManagerCommandTestDescription=测试命令输出是否仅包含密码本身（stdout 纯文本，无多余格式）。
#custom
preferTerminalTabs=优先使用新标签页
#custom
preferTerminalTabsDescription=控制 XPipe 是否尝试在所选终端中新建标签页而非新窗口。并非所有终端都支持标签。
customRdpClientCommand=自定义命令
customRdpClientCommandDescription=启动自定义 RDP 客户端时要执行的命令。\n\n调用时，占位符字符串 $FILE 将被带引号的 .rdp 绝对文件名替换。如果可执行文件路径包含空格，请记住使用引号。
customEditorCommand=自定义编辑器命令
customEditorCommandDescription=启动自定义编辑器时要执行的命令。\n\n调用时，占位符字符串 $FILE 将被带引号的绝对文件名替换。如果编辑器的执行路径包含空格，请记住一定要加上引号。
editorReloadTimeout=编辑器重载超时
editorReloadTimeoutDescription=文件更新后读取前的等待毫秒数。这样可以避免编辑器在写入或释放文件锁时出现问题。
#custom
encryptAllVaultData=加密全部保险库数据
#custom
encryptAllVaultDataDescription=启用后，连接数据的所有字段（而非仅机密项）都会用保险库主密钥加密，为用户名、主机名等原本明文参数增加保护。\n\n代价：Git 保险库的历史与 diff 不再可读，仅呈现二进制块。
vaultSecurity=保险库安全
developerDisableUpdateVersionCheck=禁用更新版本检查
developerDisableUpdateVersionCheckDescription=控制更新检查程序在查找更新时是否忽略版本号。
developerDisableGuiRestrictions=禁用图形用户界面限制
developerDisableGuiRestrictionsDescription=控制是否仍可从用户界面执行某些已禁用的操作。
developerShowHiddenEntries=显示隐藏条目
developerShowHiddenEntriesDescription=启用后，将显示隐藏数据源和内部数据源。
developerShowHiddenProviders=显示隐藏的提供商
developerShowHiddenProvidersDescription=控制是否在创建对话框中显示隐藏的内部连接和数据源提供程序。
developerDisableConnectorInstallationVersionCheck=禁用连接器版本检查
developerDisableConnectorInstallationVersionCheckDescription=控制更新检查程序在检查远程计算机上安装的 XPipe 连接器的版本时是否忽略版本号。
#custom
shellCommandTest=Shell 命令测试
#custom
shellCommandTestDescription=在 XPipe 内部使用的 Shell 会话中运行一条命令。
terminal=终端
#custom
terminalType=终端类型
terminalConfiguration=终端配置
#custom
terminalCustomization=终端自定义
editorConfiguration=编辑器配置
defaultApplication=默认应用程序
initialSetup=初始设置
#custom
terminalTypeDescription=用于打开 Shell 连接的默认终端。\n\n不同终端的功能支持程度各异，并带有推荐/不推荐标识。选择推荐终端可获得更佳体验。
program=程序
customTerminalCommand=自定义终端命令
#custom
customTerminalCommandDescription=使用给定命令启动自定义终端时执行的命令。\n\nXPipe 会生成临时启动器脚本供终端调用，命令中的占位符 $CMD 会被实际脚本路径替换。若终端可执行路径含空格需加引号。
#custom
clearTerminalOnInit=启动时清屏
#custom
clearTerminalOnInitDescription=启用后，新终端会话启动后将执行清屏命令，移除启动时的多余输出。
#custom
dontCachePasswords=不缓存已输入的密码
#custom
dontCachePasswordsDescription=开启后，XPipe 会在本会话内缓存已输入的密码，后续无需重复输入。\n\n关闭后，每当系统再次需要这些密码时都会重新提示你输入。
denyTempScriptCreation=拒绝创建临时脚本
#custom
denyTempScriptCreationDescription=为了实现某些功能，XPipe 有时会在目标系统上创建临时 Shell 脚本，以便轻松执行简单命令。这些脚本不包含任何敏感信息，只是为了实现目的而创建的。\n\n如果禁用该行为，XPipe 将不会在远程系统上创建任何临时文件。该选项在高度安全的情况下非常有用，因为在这种情况下，文件系统的每次更改都会受到监控。如果禁用，某些功能（如 Shell 环境和脚本）将无法正常工作。
#custom
disableCertutilUse=禁用 Windows certutil
#custom
useLocalFallbackShell=使用本地备用 Shell
#custom
useLocalFallbackShellDescription=改用其他本地 Shell 来处理本地操作。在 Windows 系统上是 PowerShell，在其他系统上是 Bourne Shell。\n\n如果正常的本地默认 Shell 在某种程度上被禁用或损坏，则可以使用此选项。启用该选项后，某些功能可能无法正常工作。
#custom
disableCertutilUseDescription=由于 cmd.exe 存在若干缺陷和 bug（在处理非 ASCII 输入时尤其容易出错），XPipe 会把临时脚本内容先做 Base64 编码，再借助 certutil 解码写出脚本文件。也可以改用 PowerShell 完成该步骤，但速度会更慢。\n\n启用本选项后，将在 Windows 上完全禁用 certutil，相关功能一律回退为使用 PowerShell。某些杀毒软件会拦截 certutil，禁用后可能减少误报或阻断。
#custom
disableTerminalRemotePasswordPreparation=禁用远程终端密码预置
#custom
disableTerminalRemotePasswordPreparationDescription=建立经多级跳板的远程 Shell 连接时，可能需在中间系统暂存密码以自动响应提示。\n\n若不希望密码流经中间系统，可禁用此功能；所需密码将于终端打开时现场输入。
more=更多信息
translate=翻译
#custom
allConnections=全部连接
allScripts=所有脚本
#custom
allIdentities=全部身份
#custom
synced=已同步
predefined=预定义
samples=样本
goodMorning=早上好
goodAfternoon=下午好
goodEvening=晚上好
#custom
addVisual=添加视觉元素 ...
addDesktop=桌面 ...
#custom
ssh=SSH 连接
sshConfiguration=SSH 配置
#custom
size=文件大小
attributes=属性
modified=已修改
owner=所有者
#custom
updateReadyTitle=可更新至 $VERSION$
templates=模板
retry=重试
retryAll=全部重试
replace=替换
replaceAll=全部替换
copyPassword=复制密码
#custom
lockVaultOnHibernation=休眠/睡眠时自动锁库
#custom
lockVaultOnHibernationDescription=启用后系统进入休眠/睡眠即自动锁定保险库，唤醒需重新登录。
overview=概述
history=历史
skipAll=全部跳过
notes=说明
addNotes=添加注释
order=重新排序
keepFirst=先保留
keepLast=保持最后
pinToTop=图钉到顶部
unpinFromTop=从顶部解钉
orderAheadOf=提前订购...
httpServer=HTTP 服务器
#custom
mcpServer=MCP 服务端
#custom
apiKey=API 密钥
#custom
apiKeyDescription=用于对 XPipe 守护进程 API 请求进行认证的密钥。认证方式见 API 文档。
#custom
disableApiAuthentication=禁用 API 认证
#custom
disableApiAuthenticationDescription=停用所有必需的认证方式，允许处理任意未认证请求。\n\n仅限开发调试场景使用，生产环境请保持开启。
#custom
api=API
storeIntroImportDescription=已经在其他系统上使用 XPipe？通过远程 git 仓库在多个系统上同步您的现有连接。如果尚未设置，您也可以稍后随时进行同步。
importConnections=同步连接...
importConnectionsTitle=导入连接
#custom
showNonRunningChildren=显示未运行的子进程
httpApi=HTTP API
isOnlySupportedLimit=只有在连接数超过$COUNT$ 时才支持专业许可证
areOnlySupportedLimit=只有在连接数超过$COUNT$ 时才支持专业许可证
enabled=已启用
enableGitStoragePtbDisabled=公共测试版已禁用 Git 同步功能，以防止与常规发布版本的 git 仓库一起使用，并避免将公共测试版作为日常驱动程序使用。
#custom
copyId=复制 API 标识
requireDoubleClickForConnections=要求双击连接
requireDoubleClickForConnectionsDescription=如果启用，则必须双击连接才能启动。如果您习惯双击事物，这将非常有用。
clearTransferDescription=清除选择
selectTab=选择选项卡
closeTab=关闭选项卡
closeOtherTabs=关闭其他标签页
closeAllTabs=关闭所有标签页
closeLeftTabs=向左关闭标签
closeRightTabs=向右关闭标签页
addSerial=串行 ...
connect=连接
#custom
workspaces=工作区
manageWorkspaces=管理工作区
addWorkspace=添加工作区 ...
workspaceAdd=添加新工作区
workspaceAddDescription=工作区是运行 XPipe 的不同配置。每个工作区都有一个数据目录，本地存储所有数据。其中包括连接数据、设置等。\n\n如果使用同步功能，您还可以选择将每个工作区与不同的 git 仓库同步。
workspaceName=工作区名称
workspaceNameDescription=工作区的显示名称
workspacePath=工作区路径
#custom
workspacePathDescription=工作区数据目录路径
workspaceCreationAlertTitle=创建工作区
#custom
developerForceSshTty=强制 SSH 分配 TTY
#custom
developerForceSshTtyDescription=让所有 SSH 连接都分配一个伪终端 (pty)，用于测试在缺少独立 stderr 以及强制 pty 情况下的支持。
developerDisableSshTunnelGateways=禁用 SSH 网关隧道
#custom
developerDisableSshTunnelGatewaysDescription=对网关不使用隧道会话，而是直接连接到系统。
#custom
ttyWarning=该连接被强制分配了 pty/TTY，且未提供单独的 stderr 流。\n\n这可能会导致一些问题。\n\n如有可能，请尝试使连接命令不再强制分配 pty。
xshellSetup=Xshell 设置
termiusSetup=Termius 设置
tryPtbDescription=在 XPipe 开发人员构建版本中提前试用新功能
#custom
confirmVaultUnencryptTitle=确认停用高级加密
#custom
confirmVaultUnencryptContent=确定要禁用高级保险库加密吗？将移除额外加密层并重写现有数据。
enableHttpApi=启用 HTTP API
#custom
enableHttpApiDescription=开启后，外部程序可通过 HTTP API 调用 XPipe 守护进程，对已管理的连接执行操作。
chooseCustomIcon=选择自定义图标
gitVault=Git 保险库
#custom
fileBrowser=文件管理器
#custom
confirmAllDeletions=删除前确认
#custom
confirmAllDeletionsDescription=是否为所有删除操作显示确认对话框（默认仅对目录启用）。
yesterday=昨天
green=绿色
yellow=黄色
blue=蓝色
red=红色
cyan=青色
purple=紫色
asktextAlertTitle=提示
fileWriteBlankTitle=确认文件擦除
fileWriteBlankContent=您想删除$FILE$ 中的文件内容并写入一个空文件吗？如果您不打算这样做，可以取消此操作。
#custom
fileWriteSudoTitle=以 Sudo 权限写入文件
fileWriteSudoContent=您要写入的文件需要 root 权限。你想用 sudo 来写这个文件吗？这将通过提供的凭证或提示自动提升为 root 权限。
#custom
dontAllowTerminalRestart=禁止终端请求重启
#custom
dontAllowTerminalRestartDescription=默认允许会话在终端内部结束后再次请求启动，XPipe 会响应这些外部重启请求。\n\n由于无法验证请求来源，恶意本地程序也可能借此发起连接。禁用后将拒绝此类重启请求以提升安全性。
#custom
openDocumentation=查看文档
openDocumentationDescription=访问 XPipe 文档页面了解这一问题
#custom
renameAll=全部重命名
logging=日志
#custom
enableTerminalLogging=启用终端日志记录
#custom
enableTerminalLoggingDescription=为所有终端会话启用客户端日志；输入与输出写入日志文件。敏感信息（如密码提示）不会被记录。
#custom
terminalLoggingDirectory=终端日志目录
#custom
terminalLoggingDirectoryDescription=所有终端日志存放于本机 XPipe 数据目录。
#custom
openSessionLogs=查看会话日志
#custom
sessionLogging=终端日志记录
#custom
sessionActive=该连接当前在后台运行。\n\n单击状态指示器以手动停止会话。
skipValidation=跳过验证
#custom
scriptsIntroTitle=脚本简介
#custom
scriptsIntroText=你可以在 Shell 初始化时、在文件浏览器中或按需运行脚本。你的自定义提示符、别名和其他自定义功能可自动应用到所有系统，无需在远程主机上手动配置——XPipe 的脚本系统会为你全部处理。
scriptsIntroBottomTitle=使用脚本
scriptsIntroBottomText=这里有各种示例脚本供您开始使用。你可以点击各个脚本的编辑按钮，查看它们是如何实现的。脚本必须启用才能运行并显示在菜单中，每个脚本上都有一个切换按钮。
#custom
scriptsIntroStart=立即开始
#custom
checkForSecurityUpdates=检查重要安全更新
checkForSecurityUpdatesDescription=XPipe 可与正常功能更新分开检查潜在的安全更新。启用此功能后，即使正常的更新检查被禁用，至少也会推荐安装重要的安全更新。\n\n禁用此设置后，将不会执行外部版本请求，也不会通知您任何安全更新。
#custom
clickToDock=点击以停靠终端
#custom
terminalStarting=正在等待终端启动
#custom
pinTab=固定选项卡
unpinTab=取消固定选项卡
#custom
pinned=已固定
#custom
enableTerminalDocking=启用终端窗口停靠
#custom
enableTerminalDockingDescription=启用后，可将终端窗口贴合在 XPipe 窗口上模拟集成终端。XPipe 会自动管理窗口位置和尺寸。
#custom
downloadsDirectory=下载保存目录
#custom
downloadsDirectoryDescription=点击“移至下载”时文件会放入此目录。默认使用系统用户下载目录，可自定义覆盖。
pinLocalMachineOnStartup=启动时 Pin 本地计算机选项卡
pinLocalMachineOnStartupDescription=自动打开本地计算机标签并将其固定。如果你经常在打开本地机器和远程文件系统的情况下使用分割文件浏览器，这将非常有用。
#custom
terminalErrorDescription=该错误可能阻止 XPipe 正常运行，请尽快处理。
#custom
groupName=分组名称
#custom
chmodPermissions=更改权限为
editFilesWithDoubleClick=双击编辑文件
editFilesWithDoubleClickDescription=启用后，双击文件将直接在文本编辑器中打开，而不是显示上下文菜单。
#custom
censorMode=脱敏模式
censorModeDescription=模糊主机名、用户名、连接名等信息。\n\n如果您打算对 XPipe 进行截屏或屏幕共享，但又不想泄露任何信息，这将非常有用。
#custom
addIdentity=添加身份 ...
#custom
identities=身份列表
addMacro=行动 ...
#custom
identitiesIntroTitle=身份功能简介
#custom
identitiesIntroText=若经常复用同一用户名、密码或密钥，建议创建可重复使用的身份。
#custom
identitiesIntroBottomTitle=共享身份
#custom
identitiesIntroBottomText=身份可仅本地使用，也可通过 Git 同步选择性地与其他系统或团队成员共享。
#custom
setupSync=配置同步
#custom
createIdentity=创建身份
userName=用户名
team=团队
#custom
teamSettings=团队管理
teamVaults=团队保险库
vaultTypeNameDefault=默认保险库
#custom
vaultTypeNameLegacy=旧版个人保险库
vaultTypeNamePersonal=个人保险库
vaultTypeNameTeam=团队保险库
#custom
teamVaultsDescription=团队保险库支持多用户安全访问。连接与身份可设置为全员共享，或用个人密钥加密仅自用；其他用户无法访问您的个人项目。
#custom
vaultTypeContentDefault=当前为默认保险库：未设置用户与自定义口令，机密以本地库密钥加密。可创建库用户升级为个人库，以个人口令加密并在登录时解锁。
#custom
vaultTypeContentLegacy=当前为旧版个人保险库：机密以个人口令加密，功能受限且无法原地转换为团队库。
#custom
vaultTypeContentPersonal=当前为个人保险库：机密采用您的个人口令加密。可添加其它库用户升级为团队库。
#custom
vaultTypeContentTeam=当前为团队保险库：支持多用户共享。连接/身份可设为共享或仅个人加密私有；他人无法访问您的私有条目。
userManagement=用户管理
userManagementDescription=管理现有保险库用户或创建新用户。
#custom
userManagementDescriptionEmpty=管理或创建保险库用户。为自己创建用户后可用个人密钥加密连接与身份。\n\n社区版仅支持 1 个用户；专业版支持团队多用户。
userIntroHeader=用户管理
userIntroContent=为自己创建第一个用户账户，以便开始使用。这样就可以用密码锁定该工作区。
#custom
addReusableIdentity=添加可复用身份
users=用户
#custom
syncTeamVaults=同步团队保险库
#custom
syncTeamVaultsDescription=启用 Git 同步以在团队成员之间共享保险库。
#custom
enableGitSync=启用 Git 同步
#custom
browseVault=查看保险库数据
#custom
browseVaultDescription=保险库存放所有连接信息与凭据，可在本地文件管理器查看。\n\n不建议外部编辑，可能引发数据不一致。
#custom
browseVaultButton=打开保险库目录
vaultUsers=保险库用户
createHeapDump=创建堆转储
#custom
createHeapDumpDescription=将内存内容转存为文件，以分析内存使用问题。
#custom
initializingApp=正在加载连接...
#custom
loadingGit=正在同步 Git 仓库...
#custom
loadingSettings=正在加载设置...
#custom
loadingConnections=加载连接中...
#custom
loadingUserInterface=正在加载用户界面...
#custom
ptbNotice=公测版通知
#custom
userDeletionTitle=删除用户
#custom
userDeletionContent=确认删除该用户？其所有个人身份与连接将被移除。XPipe 将重启以应用更改。
#custom
killTransfer=中止传输
#custom
destination=目标路径
configuration=配置
#custom
newFile=创建新文件
#custom
newLink=创建新链接
linkName=链接名称
scanConnections=查找可用连接 ...
#custom
observe=开始监控
#custom
stopObserve=停止监控
#custom
createShortcut=创建快捷方式
browseFiles=浏览文件
clone=克隆
targetPath=目标路径
newDirectory=新目录
copyShareLink=复制链接
#custom
selectStore=选择存储位置
saveSource=稍后保存
#custom
execute=运行
#custom
deleteChildren=删除所有子项
descriptionDescription=为该组提供可选描述
selectSource=选择来源
#custom
commandLineRead=读取命令行
#custom
commandLineWrite=写入命令行
additionalOptions=附加选项
input=输入
machine=机器
open=打开
edit=编辑
scriptContents=脚本内容
scriptContentsDescription=要执行的脚本命令
#custom
snippets=脚本片段
#custom
snippetsDescription=优先运行的其他脚本片段
#custom
snippetsDependenciesDescription=（可选）可能运行的脚本片段列表
#custom
isDefault=在所有兼容的 Shell 初始化时运行
#custom
bringToShells=适用于所有兼容的 Shell
#custom
isDefaultGroup=Shell 启动时运行该组内全部脚本
executionType=执行类型
#custom
executionTypeDescription=在哪些场景/阶段使用此脚本
#custom
minimumShellDialect=Shell 类型
#custom
minimumShellDialectDescription=运行此脚本所需的 Shell 类型
#custom
dumbOnly=简化模式
#custom
terminalOnly=仅终端
#custom
both=两者皆可
#custom
shouldElevate=需要提权
#custom
shouldElevateDescription=是否以提升权限（如 sudo/管理员）运行该脚本
#custom
script.displayName=Shell 脚本
#custom
script.displayDescription=创建可重复使用的 Shell 脚本
scriptGroup.displayName=脚本组
scriptGroup.displayDescription=创建一个组来组织内部脚本
scriptGroup=组别
scriptGroupDescription=要将此脚本分配给的组
scriptGroupGroupDescription=要将此脚本组分配给的组
openInNewTab=在新标签页中打开
#custom
executeInBackground=在后台运行
#custom
executeInTerminal=在 $TERM$ 中执行
back=返回
#custom
browseInWindowsExplorer=在资源管理器中打开
#custom
browseInDefaultFileManager=在默认文件管理器中打开
#custom
browseInFinder=在 Finder 中打开
copy=复制
paste=粘贴
#custom
copyLocation=复制路径
absolutePaths=绝对路径
absoluteLinkPaths=绝对链接路径
absolutePathsQuoted=绝对引用路径
fileNames=文件名
linkFileNames=链接文件名
fileNamesQuoted=文件名（引用）
#custom
deleteFile=删除 $FILE$
deleteLink=删除链接
#custom
editWithEditor=使用 $EDITOR$ 编辑
followLink=跟踪链接
goForward=前进
showDetails=显示详细信息
showDetailsDescription=显示错误的堆栈跟踪
#custom
#custom
openFileWith=用其他程序打开
openWithDefaultApplication=用默认应用程序打开
rename=重命名
run=运行
openInTerminal=在终端中打开
file=文件
directory=目录
symbolicLink=符号链接
#custom
desktopEnvironment.displayName=远程桌面环境
desktopEnvironment.displayDescription=创建可重复使用的远程桌面环境配置
desktopHost=桌面主机
desktopHostDescription=作为基础的桌面连接
#custom
desktopShellDialect=Shell 类型
#custom
desktopShellDialectDescription=运行脚本和应用程序所用 Shell 类型
desktopSnippets=脚本片段
#custom
desktopSnippetsDescription=优先运行的可复用脚本片段列表
#custom
desktopInitScript=初始化脚本
desktopInitScriptDescription=该环境专用的初始化命令
#custom
desktopTerminal=桌面终端程序
#custom
desktopTerminalDescription=桌面上用于启动脚本的终端程序。
desktopApplication.displayName=桌面应用程序
desktopApplication.displayDescription=在远程桌面上运行应用程序
desktopBase=桌面
desktopBaseDescription=运行此应用程序的桌面
desktopEnvironmentBase=桌面环境
desktopEnvironmentBaseDescription=运行此应用程序的桌面环境
desktopApplicationPath=应用路径
desktopApplicationPathDescription=要运行的可执行文件的路径
desktopApplicationArguments=参数
desktopApplicationArgumentsDescription=传递给应用程序的可选参数
desktopCommand.displayName=桌面命令
desktopCommand.displayDescription=在远程桌面环境中运行命令
desktopCommandScript=命令
desktopCommandScriptDescription=在环境中运行的命令
service.displayName=服务
service.displayDescription=将远程服务转发到本地计算机
#custom
serviceLocalPort=指定本地端口
serviceLocalPortDescription=要转发到的本地端口，否则使用随机端口
serviceRemotePort=远程端口
serviceRemotePortDescription=服务运行的端口
serviceHost=服务主机
serviceHostDescription=服务运行的主机
openWebsite=打开网站
customServiceGroup.displayName=服务组
customServiceGroup.displayDescription=将多项服务归为一类
#custom
initScript=启动脚本 - 在 Shell 启动时运行
#custom
shellScript=Shell 会话脚本 - 在 Shell 会话中运行脚本
#custom
runnableScript=可运行脚本 - 允许从连接中心直接运行脚本
fileScript=文件脚本 - 允许在文件浏览器中使用文件参数调用脚本
runScript=运行脚本
copyUrl=复制 URL
fixedServiceGroup.displayName=服务组
fixedServiceGroup.displayDescription=列出系统中可用的服务
mappedService.displayName=服务
mappedService.displayDescription=与容器暴露的服务交互
customService.displayName=服务
customService.displayDescription=自动隧道远程服务端口到本地计算机
fixedService.displayName=服务
fixedService.displayDescription=使用预定义服务
noServices=无可用服务
hasServices=$COUNT$ 可用服务
hasService=$COUNT$ 可用服务
noConnections=无可用连接
hasConnections=$COUNT$ 可用连接
hasConnection=$COUNT$ 可用连接
#custom
openHttp=打开 HTTP 服务
#custom
openHttps=打开 HTTPS 服务
#custom
noScriptsAvailable=无可用脚本
scriptsDisabled=禁用脚本
changeIcon=更改图标
init=启动
#custom
shell=Shell
#custom
hub=连接中心
script=脚本
genericScript=通用脚本
archiveName=档案名称
compress=压缩
compressContents=压缩内容
#custom
untarHere=在此解压
untarDirectory=到$DIR$
unzipDirectory=解压缩为$DIR$
#custom
unzipHere=解压到当前目录
#custom
requiresRestart=更改将在重新启动后生效。
download=下载
servicePath=服务路径
servicePathDescription=在浏览器中打开 URL 时可选择的子路径
#custom
active=已激活
#custom
inactive=未激活
#custom
starting=开启中
#custom
remotePort=远程端口
#custom
remotePortNumber=远程端口号：$PORT$
userIdentity=个人身份
#custom
globalIdentity=全局身份
#custom
identityChoice=选择身份
#custom
identityChoiceDescription=选择已有身份或创建一个可复用身份用于该连接
#custom
defineNewIdentityOrSelect=输入用户名或选择已有身份
localIdentity.displayName=本地身份
#custom
localIdentity.displayDescription=为此本地桌面创建一个可复用的身份
syncedIdentity.displayName=同步身份
#custom
syncedIdentity.displayDescription=创建跨系统同步的可复用身份
localIdentity=本地身份
keyNotSynced=密钥文件未同步
usernameDescription=登录的用户名
identity.displayName=身份
#custom
identity.displayDescription=为连接创建可复用身份
local=本地
#custom
shared=全局
#custom
userDescription=登录使用的用户名或可复用身份
#custom
identityPerUserDescription=限制仅当前保险库用户可访问此身份及其连接
#custom
identityPerUser=仅个人可见
#custom
identityPerUserDisabled=个人访问（已禁用）
#custom
identityPerUserDisabledDescription=限制仅当前保险库用户访问（需已配置团队）
#custom
library=资源库
location=地点
#custom
keyAuthentication=密钥认证
#custom
keyAuthenticationDescription=需要密钥登录时采用的认证方式
#custom
locationDescription=私钥文件路径
keyFile=密钥文件
#custom
keyPassword=密钥口令
#custom
key=密钥
yubikeyPiv=Yubikey PIV
#custom
pageant=Pageant
gpgAgent=GPG 代理
customPkcs11Library=自定义 PKCS#11 库
sshAgent=OpenSSH 代理
none=无
#custom
index=自定义顺序
otherExternal=其他外部代理
sync=同步
vaultSync=保险库同步
#custom
customUsername=自定义用户名
customUsernameDescription=用于登录的可选备用用户
#custom
customUsernamePassword=自定义密码
#custom
customUsernamePasswordDescription=执行 sudo 验证时使用的用户密码
#custom
showInternalPods=显示内部 Pod
showAllNamespaces=显示所有命名空间
showInternalContainers=显示内部容器
refresh=刷新
vmwareGui=启动图形用户界面
monitorVm=监控虚拟机
addCluster=添加集群 ...
showNonRunningInstances=显示非运行实例
#custom
vmwareGuiDescription=选择在后台启动虚拟机，还是以窗口方式启动。
#custom
vmwareEncryptionPassword=虚拟机加密口令
#custom
vmwareEncryptionPasswordDescription=（可选）用于解锁已加密虚拟机的口令。
vmPasswordDescription=访客用户所需的密码。
vmPassword=用户密码
vmUser=访客用户
runTempContainer=运行临时容器
vmUserDescription=主要访客用户的用户名
dockerTempRunAlertTitle=运行临时容器
#custom
dockerTempRunAlertHeader=此操作将在临时容器中运行一个 Shell 进程，停止后自动移除。
#custom
imageName=镜像名称
#custom
imageNameDescription=要使用的容器镜像标识符
containerName=容器名称
#custom
containerNameDescription=（可选）自定义容器名称
vm=虚拟机
vmDescription=相关的配置文件。
vmwareScan=VMware 桌面管理程序
vmwareMachine.displayName=VMware 虚拟机
#custom
vmwareMachine.displayDescription=通过 SSH 连接该虚拟机
vmwareInstallation.displayName=安装 VMware 桌面管理程序
#custom
vmwareInstallation.displayDescription=通过 CLI 管理已安装的虚拟机
start=启动
stop=停止
pause=暂停
rdpTunnelHost=目标主机
rdpTunnelHostDescription=将 RDP 连接隧道化的 SSH 连接
rdpTunnelUsername=用户名
rdpTunnelUsernameDescription=登录时使用的自定义用户，如果留空，则使用 SSH 用户
rdpFileLocation=文件位置
rdpFileLocationDescription=.rdp 文件的文件路径
#custom
rdpPasswordAuthentication=RDP 密码认证
rdpFiles=RDP 文件
rdpPasswordAuthenticationDescription=要填写或复制到剪贴板的密码，取决于客户端支持
rdpFile.displayName=RDP 文件
rdpFile.displayDescription=通过现有 .rdp 文件连接系统
requiredSshServerAlertTitle=设置 SSH 服务器
#custom
requiredSshServerAlertHeader=虚拟机中未检测到已安装的 SSH 服务器。
#custom
requiredSshServerAlertContent=XPipe 尝试连接该虚拟机，但没有发现正在运行的 SSH 服务器。
computerName=计算机名称
#custom
pssComputerNameDescription=目标计算机名称
#custom
credentialUser=认证用户名
#custom
credentialUserDescription=用于登录的用户名。
#custom
credentialPassword=认证密码
#custom
credentialPasswordDescription=该用户的登录密码。
#custom
sshConfig=SSH 配置
autostart=在 XPipe 启动时自动连接
#custom
acceptHostKey=信任此主机密钥
#custom
modifyHostKeyPermissions=修正主机密钥权限
#custom
attachContainer=附加到容器
#custom
containerLogs=查看日志
openSftpClient=在外部 SFTP 客户端中打开
openTermius=在 Termius 中打开
showInternalInstances=显示内部实例
#custom
editPod=编辑 Pod
#custom
acceptHostKeyDescription=信任该主机密钥并继续
#custom
modifyHostKeyPermissionsDescription=尝试移除原始文件的多余权限以满足 OpenSSH 的要求
psSession.displayName=PowerShell 远程会话
psSession.displayDescription=通过 New-PSSession 和 Enter-PSSession 连接
sshLocalTunnel.displayName=本地 SSH 通道
sshLocalTunnel.displayDescription=建立连接远程主机的 SSH 通道
sshRemoteTunnel.displayName=远程 SSH 通道
sshRemoteTunnel.displayDescription=从远程主机建立反向 SSH 通道
sshDynamicTunnel.displayName=动态 SSH 通道
sshDynamicTunnel.displayDescription=通过 SSH 连接建立 SOCKS 代理
#custom
shellEnvironmentGroup.displayName=Shell 环境
#custom
shellEnvironmentGroup.displayDescription=Shell 环境
#custom
shellEnvironment.displayName=Shell 环境
#custom
shellEnvironment.displayDescription=创建自定义 Shell 启动环境
shellEnvironment.informationFormat=$TYPE$ 环境
shellEnvironment.elevatedInformationFormat=$ELEVATION$ $TYPE$ 环境
environmentConnectionDescription=基础连接，为
#custom
environmentScriptDescription=在 Shell 中运行的可选自定义启动脚本
#custom
environmentSnippets=Shell 脚本片段
#custom
commandSnippetsDescription=优先运行的可选预定义 Shell 脚本片段
#custom
environmentSnippetsDescription=初始化时运行的可选预定义 Shell 脚本片段
#custom
shellTypeDescription=指定 Shell 类型
originPort=源端口
originAddress=源地址
remoteAddress=远程地址
remoteSourceAddress=远程源地址
remoteSourcePort=远程源端口
#custom
originDestinationPort=源端目标端口
#custom
originDestinationAddress=源端目标地址
#custom
origin=源端
remoteHost=远程主机
address=地址
proxmox.displayName=Proxmox
proxmox.displayDescription=连接 Proxmox 虚拟环境中的系统
proxmoxVm.displayName=Proxmox 虚拟机
proxmoxVm.displayDescription=通过 SSH 连接 Proxmox VE 中的虚拟机
proxmoxContainer.displayName=Proxmox 容器
proxmoxContainer.displayDescription=连接到 Proxmox VE 中的容器
sshDynamicTunnel.hostDescription=用作 SOCKS 代理的系统
#custom
sshDynamicTunnel.bindingDescription=要将该隧道绑定到的地址
#custom
sshRemoteTunnel.hostDescription=在此系统上启动指向源端的反向 SSH 隧道。
#custom
sshRemoteTunnel.bindingDescription=要将远程隧道绑定到的地址
#custom
sshLocalTunnel.hostDescription=要建立隧道连接的远程系统
#custom
sshLocalTunnel.bindingDescription=要将本地隧道绑定到的地址
#custom
sshLocalTunnel.localAddressDescription=要绑定的本地地址
sshLocalTunnel.remoteAddressDescription=要绑定的远程地址
cmd.displayName=终端命令
#custom
cmd.displayDescription=在终端中运行预设系统命令
k8sPod.displayName=Kubernetes Pod
#custom
k8sPod.displayDescription=通过 kubectl 连接 Pod 及其容器
k8sContainer.displayName=Kubernetes 容器
#custom
k8sContainer.displayDescription=打开容器 Shell 会话
k8sCluster.displayName=Kubernetes 集群
#custom
k8sCluster.displayDescription=通过 kubectl 连接集群及其 Pod
sshTunnelGroup.displayName=SSH 隧道
sshTunnelGroup.displayCategory=所有类型的 SSH 隧道
local.displayName=本地机器
#custom
local.displayDescription=本地计算机的 Shell
cygwin=Cygwin
msys2=MSYS2
#custom
gitWindows=Git for Windows
#custom
gitForWindows.displayName=Git for Windows
gitForWindows.displayDescription=访问本地 Git for Windows 环境
msys2.displayName=MSYS2
#custom
msys2.displayDescription=MSYS2 环境的访问 Shell
cygwin.displayName=Cygwin
#custom
cygwin.displayDescription=访问 Cygwin 环境的 Shell
#custom
namespace=命名空间
gitVaultIdentityStrategy=Git SSH 身份
#custom
gitVaultIdentityStrategyDescription=当远程仓库使用 SSH URL 且需 SSH 身份时配置此项。\n\n若使用 HTTP URL 可忽略。
dockerContainers=Docker 容器
#custom
dockerCmd.displayName=Docker CLI 客户端
#custom
dockerCmd.displayDescription=通过 Docker CLI 客户端访问 Docker 容器
wslCmd.displayName=WSL 安装
#custom
wslCmd.displayDescription=通过 WSL CLI 客户端访问 WSL 实例
k8sCmd.displayName=kubectl 客户端
k8sCmd.displayDescription=通过 kubectl 访问 Kubernetes 集群
k8sClusters=Kubernetes 集群
#custom
shells=可用的 Shell
#custom
inspectContainer=查看容器信息
inspectContext=检查
#custom
k8sClusterNameDescription=集群所在的上下文名称
#custom
pod=Pod
podName=Pod 名称
k8sClusterContext=上下文
#custom
k8sClusterContextDescription=集群所在的上下文名称
#custom
k8sClusterNamespace=命名空间
#custom
k8sClusterNamespaceDescription=自定义命名空间；留空则使用默认命名空间
k8sConfigLocation=配置文件
k8sConfigLocationDescription=自定义的 kubeconfig 文件或默认文件（如果留空）。
#custom
inspectPod=查看 Pod 详情
showAllContainers=显示未运行的容器
#custom
showAllPods=显示未运行的 Pod
#custom
k8sPodHostDescription=Pod 所在节点
k8sContainerDescription=Kubernetes 容器的名称
#custom
k8sPodDescription=Kubernetes Pod 名称
#custom
podDescription=容器所在的 Pod
#custom
k8sClusterHostDescription=访问集群的主机；需已安装并配置 kubectl。
connection=连接
#custom
shellCommand.displayName=自定义 Shell 命令
#custom
shellCommand.displayDescription=通过自定义命令打开标准 Shell
ssh.displayName=简单的 SSH 连接
ssh.displayDescription=通过 SSH 命令行客户端连接
sshConfig.displayName=SSH 配置文件
sshConfig.displayDescription=连接 SSH 配置文件中定义的主机
#custom
sshConfigHost.displayName=SSH 配置主机
sshConfigHost.displayDescription=连接到 SSH 配置文件中定义的主机
sshConfigHost.password=密码
sshConfigHost.passwordDescription=为用户登录提供可选密码。
#custom
sshConfigHost.identityPassphrase=身份密钥口令
#custom
sshConfigHost.identityPassphraseDescription=身份私钥的可选口令。
shellCommand.hostDescription=执行命令的主机
#custom
shellCommand.commandDescription=打开 Shell 的命令
#custom
commandDescription=主机上 Shell 脚本中要执行的命令。
commandHostDescription=运行命令的主机
commandDataFlowDescription=该命令如何处理输入和输出
commandElevationDescription=以提升的权限运行此命令
#custom
commandShellTypeDescription=该命令使用的 Shell
#custom
limitedSystem=这是一个资源受限或嵌入式系统
#custom
limitedSystemDescription=跳过 Shell 类型检测（适用于资源受限的嵌入式 / IoT 设备）
#custom
sshForwardX11=启用 X11 转发
sshForwardX11Description=为连接启用 X11 转发
customAgent=自定义代理
identityAgent=身份代理
#custom
ssh.proxyDescription=SSH 连接可使用代理主机（需安装 SSH 客户端）。
usage=使用方法
wslHostDescription=WSL 实例所在的主机。必须已安装 wsl。
wslDistributionDescription=WSL 实例的名称
wslUsernameDescription=要登录的明确用户名。如果未指定，将使用默认用户名。
wslPasswordDescription=用户密码，可用于执行 sudo 命令。
#custom
dockerHostDescription=运行 Docker 容器的主机；需已安装 Docker。
#custom
dockerContainerDescription=Docker 容器名称
localMachine=本地机器
#custom
rootScan=Sudo Shell 环境
loginEnvironmentScan=自定义登录环境
k8sScan=Kubernetes 集群
options=选项
#custom
dockerRunningScan=运行中的 Docker 容器
#custom
dockerAllScan=所有 Docker 容器
wslScan=WSL 实例
sshScan=SSH 配置连接
#custom
runAsUser=以其他用户运行
#custom
runAsUserDescription=以指定其他用户身份启动该 Shell 环境
default=默认值
administrator=管理员
wslHost=WSL 主机
timeout=超时
installLocation=安装位置
installLocationDescription=$NAME$ 环境的安装位置
wsl.displayName=Linux 的 Windows 子系统
wsl.displayDescription=连接到 Windows 上运行的 WSL 实例
docker.displayName=Docker 容器
#custom
docker.displayDescription=连接到 Docker 容器
port=端口
user=用户
password=密码
method=方法
uri=网址
proxy=代理
#custom
distribution=安装方式
username=用户名
#custom
shellType=Shell 类型
#custom
browseFile=查看文件
#custom
openShell=在终端中打开 Shell
openCommand=在终端中执行命令
editFile=编辑文件
description=说明
furtherCustomization=进一步定制
furtherCustomizationDescription=有关更多配置选项，请使用 ssh 配置文件
browse=浏览
configHost=主机
configHostDescription=配置所在的主机
configLocation=配置位置
configLocationDescription=配置文件的文件路径
gateway=网关
gatewayDescription=连接时使用的可选网关。
#custom
connectionInformation=连接详情
connectionInformationDescription=连接哪个系统
passwordAuthentication=密码验证
#custom
passwordAuthenticationDescription=用于身份验证的可选密码
sshConfigString.displayName=自定义 SSH 连接
sshConfigString.displayDescription=创建完全自定义的 SSH 连接
sshConfigStringContent=配置
#custom
sshConfigStringContentDescription=以 OpenSSH 配置格式指定此连接的 SSH 选项
vnc.displayName=通过 SSH 进行 VNC 连接
vnc.displayDescription=通过隧道连接打开 VNC 会话
#custom
binding=绑定
vncPortDescription=VNC 服务器监听的端口
vncUsername=用户名
vncUsernameDescription=可选的 VNC 用户名
vncPassword=密码
#custom
vncPasswordDescription=VNC 访问密码
#custom
x11WslInstance=用于 X11 转发的 WSL 实例
#custom
x11WslInstanceDescription=在使用 SSH 的 X11 转发时作为 X11 服务器的本地 WSL（必须是 WSL2
#custom
openAsRoot=以 Root 用户权限打开
openInWSL=在 WSL 中打开
launch=启动
#custom
sshTrustKeyContent=未知主机密钥，已启用手动验证：$CONTENT$
sshTrustKeyTitle=未知主机密钥
rdpTunnel.displayName=通过 SSH 进行 RDP 连接
rdpTunnel.displayDescription=通过 RDP 在隧道连接上进行连接
rdpEnableDesktopIntegration=启用桌面集成
rdpEnableDesktopIntegrationDescription=假设 RDP 允许列表允许运行远程应用程序
rdpSetupAdminTitle=需要 RDP 设置
rdpSetupAllowTitle=RDP 远程应用程序
rdpSetupAllowContent=本系统目前不允许直接启动远程应用程序。您想启用它吗？通过禁用 RDP 远程应用程序的允许列表，这将允许您直接从 XPipe 运行远程应用程序。
rdpServerEnableTitle=RDP 服务器
rdpServerEnableContent=目标系统上的 RDP 服务器已禁用。您想在注册表中启用它以允许远程 RDP 连接吗？
#custom
rdp=远程桌面（RDP）
rdpScan=通过 SSH 的 RDP 隧道
wslX11SetupTitle=WSL X11 设置
#custom
wslX11SetupContent=XPipe 可以使用你的本地 WSL 作为 X11 显示服务器。要在 $DIST$ 上设置 X11 吗？这将安装基础 X11 软件包，可能需要一些时间。你也可以稍后在设置菜单中更改所使用的版本。
command=指令
commandGroup=命令组
vncSystem=VNC 目标系统
vncSystemDescription=实际交互系统。通常与隧道主机相同
vncHost=目标 VNC 主机
vncHostDescription=运行 VNC 服务器的系统
gitVaultTitle=Git 保险库
#custom
gitVaultForcePushContent=要执行强制推送到远程仓库吗？这将用本地仓库的全部内容（包括历史记录）完全替换远程仓库。
gitVaultOverwriteLocalContent=您想覆盖本地仓库的改动吗？这会将所有远程更改应用到本地仓库。
rdpSimple.displayName=直接 RDP 连接
rdpSimple.displayDescription=通过 RDP 连接到主机
rdpUsername=用户名
#custom
rdpUsernameDescription=登录所用的用户名
addressDescription=连接到哪里
rdpAdditionalOptions=其他 RDP 选项
rdpAdditionalOptionsDescription=要包含的原始 RDP 选项，格式与 .rdp 文件相同
proxmoxVncConfirmTitle=VNC 访问
proxmoxVncConfirmContent=您要为虚拟机启用 VNC 访问吗？这将在虚拟机配置文件中直接启用 VNC 客户端访问，并重新启动虚拟机。
dockerContext.displayName=Docker 上下文
#custom
dockerContext.displayDescription=访问指定 Docker 上下文中的容器
vmActions=虚拟机操作
dockerContextActions=上下文操作
k8sPodActions=Pod 操作
openVnc=启用 VNC 访问
commandGroup.displayName=命令组
commandGroup.displayDescription=系统可用命令组
serial.displayName=串行连接
#custom
serial.displayDescription=在终端中打开串口连接
serialPort=串行端口
serialPortDescription=要连接的串行端口/设备
baudRate=波特率
dataBits=数据位
stopBits=停止位
parity=奇偶校验
flowControlWindow=流量控制
serialImplementation=串行实施
serialImplementationDescription=用于连接串行端口的工具
serialHost=主机
serialHostDescription=访问串行端口的系统
serialPortConfiguration=串行端口配置
serialPortConfigurationDescription=所连接串行设备的配置参数
serialInformation=序列信息
openXShell=在 XShell 中打开
#custom
tsh.displayName=Teleport
#custom
tsh.displayDescription=通过 tsh 连接到你的 Teleport 节点
#custom
tshNode.displayName=Teleport 节点
#custom
tshNode.displayDescription=连接到集群中的 Teleport 节点
teleportCluster=集群
#custom
teleportClusterDescription=该节点所在的集群
teleportProxy=代理
teleportProxyDescription=用于连接节点的代理服务器
teleportHost=主机
teleportHostDescription=节点的主机名
teleportUser=用户
teleportUserDescription=登录用户
login=登录
hyperVInstall.displayName=Hyper-V
hyperVInstall.displayDescription=连接由 Hyper-V 管理的虚拟机
hyperVVm.displayName=Hyper-V 虚拟机
hyperVVm.displayDescription=通过 SSH 或 PSSession 连接到 Hyper-V 虚拟机
trustHost=信任主机
trustHostDescription=将 ComputerName 添加到受信任主机列表
#custom
copyIp=复制 IP 地址
vncDirect.displayName=直接 VNC 连接
vncDirect.displayDescription=直接通过 VNC 连接到系统
editConfiguration=编辑配置
#custom
viewInDashboard=在控制面板中查看
setDefault=设置默认值
removeDefault=删除默认值
#custom
connectAsOtherUser=使用其他用户连接
provideUsername=提供其他登录用户名
vmIdentity=访客身份
vmIdentityDescription=必要时用于连接的 SSH 身份验证方法
vmPort=端口
vmPortDescription=通过 SSH 连接的端口
#custom
forwardAgent=前向代理（SSH 代理转发）
forwardAgentDescription=在远程系统上提供 SSH 代理身份
#custom
virshUri=通用资源标识符 (URI)
virshUriDescription=管理程序 URI，也支持别名
virshDomain.displayName=libvirt 域
virshDomain.displayDescription=连接到 libvirt 域
virshHypervisor.displayName=libvirt 虚拟机管理程序
virshHypervisor.displayDescription=连接到支持 libvirt 的管理程序驱动程序
virshInstall.displayName=libvirt 命令行客户端
virshInstall.displayDescription=通过 virsh 连接到所有可用的 libvirt 虚拟机管理程序
addHypervisor=添加管理程序
#custom
interactiveTerminal=交互式终端
#custom
editDomain=编辑Domain
#custom
libvirt=libvirt Domain
customIp=自定义 IP
#custom
customIpDescription=当使用高级网络配置时，可在此覆盖默认的本地虚拟机 IP 自动检测结果
automaticallyDetect=自动检测
lockCreationAlertTitle=创建用户
passphrase=密码
repeatPassphrase=重复口令
lockCreationAlertHeader=创建新的保险库用户
loginAlertTitle=需要登录
loginAlertHeader=解锁保险库以访问您的个人连接
vaultUser=保险库用户
me=我
addUser=添加用户 ...
addUserDescription=为该保险库创建新用户
skip=跳过
#custom
userChangePasswordAlertTitle=修改密码
userChangePasswordAlertHeader=为用户设置新密码
docs=文档
lxd.displayName=LXD 容器
lxd.displayDescription=通过 lxc 连接到 LXD 容器
lxdCmd.displayName=LXD CLI 客户端
lxdCmd.displayDescription=通过 lxc CLI 客户端访问 LXD 容器
podman.displayName=Podman 容器
podman.displayDescription=连接到 Podman 容器
#custom
incusInstall.displayName=Incus 容器管理器
incusInstall.displayDescription=通过 incus CLI 客户端访问 incus 容器
incusContainer.displayName=Incus 容器
incusContainer.displayDescription=连接到 incus 容器
podmanCmd.displayName=Podman CLI
podmanCmd.displayDescription=通过 CLI 客户端访问 Podman 容器
lxdHostDescription=LXD 容器所在的主机。必须安装了 lxc。
lxdContainerDescription=LXD 容器的名称
podmanContainers=Podman 容器
lxdContainers=LXD 容器
incusContainers=Incus 容器
#custom
container=容器
host=主机
#custom
containerActions=容器操作
#custom
serialConsole=串口控制台
editRunConfiguration=编辑运行配置
#custom
communityDescription=适配你各类个人用例的多功能连接工具。
upgradeDescription=为您的整个服务器基础设施提供专业的连接管理。
#custom
discoverPlans=查看升级选项
extendProfessional=升级到最新的专业功能
communityItem1=无限连接非商业系统和工具
communityItem2=与已安装的终端和编辑器无缝集成
communityItem3=功能齐全的远程文件浏览器
#custom
communityItem4=适用于所有 Shell 的强大脚本系统
communityItem5=Git 集成，用于同步和共享连接信息
upgradeItem1=包括社区版的所有功能
upgradeItem2=Homelab 计划支持无限的管理程序和高级 SSH 功能
upgradeItem3=Professional 计划还支持企业操作系统和工具
upgradeItem4=Enterprise 计划具有充分的灵活性，可满足您的个性化需求
#custom
upgrade=升级
upgradeTitle=可用计划
status=状态
type=类型
licenseAlertTitle=所需许可证
#custom
useCommunity=继续使用社区版本
#custom
previewDescription=新功能发布后可试用数周。
tryPreview=激活预览
previewItem1=新发布的专业功能发布后两周内可完全访问
previewItem2=无需任何承诺即可试用新功能
licensedTo=授权给
email=电子邮件地址
apply=应用
clear=清除
activate=激活
#custom
validUntil=许可证有效期至
#custom
licenseActivated=您的许可证已激活
restart=重新启动
#custom
restartApp=重启 XPipe
free=免费
upgradeInfo=您可以在下面找到有关升级到专业许可证的信息。
upgradeInfoPreview=您可以在下面找到有关升级到专业许可证的信息，或试用预览版。
enterLicenseKey=输入许可证密钥进行升级
isOnlySupported=至少要有$TYPE$ 许可证才支持
areOnlySupported=至少需要$TYPE$ 许可证才能支持
legacyLicense=该许可证仅包含购买后一年内发布的新专业功能。
openApiDocs=API 文档
openApiDocsDescription=HTTP API 文档在线提供，包括 OpenAPI .yaml 规范。你可以在网络浏览器或你喜欢的 HTTP 客户端中打开它。
openApiDocsButton=打开文档
pythonApi=Python API
personalConnection=此连接及其所有子连接仅对您的用户开放，因为它们取决于个人身份。
developerPrintInitFiles=打印启动文件的执行
#custom
developerPrintInitFilesDescription=打印终端启动时执行的全部 Shell 启动脚本。
developerShowSensitiveCommands=日志敏感命令
developerShowSensitiveCommandsDescription=在日志输出中包含敏感命令，以便调试。
#custom
checkingForUpdates=正在检查更新
checkingForUpdatesDescription=获取最新版本信息
#custom
downloadingUpdate=获取版本 (v$VERSION$)
#custom
downloadingUpdateDescription=正在下载发布包
updateNag=您有一段时间没有更新 XPipe 了。您可能会错过新版本的新功能和修复。
updateNagTitle=更新提醒
updateNagButton=参见发布
#custom
refreshServices=更新服务列表
serviceProtocolType=服务协议类型
#custom
serviceProtocolTypeDescription=如何打开服务
serviceCommand=服务激活后运行的命令
serviceCommandDescription=占位符 $PORT 将被替换为实际的隧道本地端口
value=价值
showAdvancedOptions=显示高级选项
sshAdditionalConfigOptions=附加配置选项
remoteFileManager=远程文件管理器
#custom
clearUserData=清除用户数据
clearUserDataDescription=删除所有用户配置数据，包括连接
clearUserDataTitle=用户数据删除
#custom
clearUserDataContent=此操作会删除 XPipe 的所有本地用户数据并重启。如果你在乎你的数据，务必先与 Git 仓库同步。
undefined=未定义
copyAddress=复制地址
#custom
tailscaleDeviceScan=Tailscale 连接
#custom
tailscaleInstall.displayName=Tailscale 安装
#custom
tailscaleInstall.displayDescription=通过 SSH 连接 Tailnet 中的设备
#custom
tailscaleDevice.displayName=Tailscale 设备
#custom
tailscaleDevice.displayDescription=通过 SSH 连接 Tailnet 中的设备
tailscaleId=设备 ID
#custom
tailscaleIdDescription=内部的 Tailscale 设备 ID
tailscaleHostName=主机名
#custom
tailscaleHostNameDescription=该设备在 Tailnet 中的主机名
tailscaleUsername=用户名
#custom
tailscaleUsernameDescription=用于登录的用户名
tailscalePassword=密码
tailscalePasswordDescription=可用于 sudo 的用户密码
scriptName=脚本名称
scriptNameDescription=为脚本自定义名称
scriptGroupName=脚本组名称
scriptGroupNameDescription=为该脚本组自定义名称
identityName=身份名称
identityNameDescription=为该标识自定义名称
#custom
tailscaleTailnet.displayName=Tailnet
#custom
tailscaleTailnet.displayDescription=使用当前账号连接到指定 Tailnet
puttyConnections=PuTTY 连接
kittyConnections=KiTTY 连接
icons=图标
customIcons=自定义图标
iconSources=图标来源
#custom
iconSourcesDescription=可以在这里添加你自己的图标来源。XPipe 会自动识别该位置的所有 .svg 文件并加入可用图标列表。\n\n支持本地目录与远程 Git 仓库。
refreshSources=刷新图标
refreshSourcesDescription=更新可用资源中的所有图标
addDirectoryIconSource=添加目录源 ...
addDirectoryIconSourceDescription=从本地目录添加图标
#custom
addGitIconSource=添加 Git 源 ...
#custom
addGitIconSourceDescription=添加远程 Git 仓库中的图标
repositoryUrl=Git 仓库 URL
iconDirectory=图标目录
addUnsupportedKexMethod=添加不支持的密钥交换方法
addUnsupportedKexMethodDescription=允许此连接使用密钥交换方法
addUnsupportedHostKeyType=添加不支持的主机密钥类型
addUnsupportedHostKeyTypeDescription=允许在此连接中使用主机密钥类型
#custom
runSilent=后台静默运行
runInFileBrowser=在文件浏览器中
#custom
runInConnectionHub=连接中心中
commandOutput=命令输出
iconSourceDeletionTitle=删除图标源
iconSourceDeletionContent=您想删除此图标源及其所有相关图标吗？
refreshIcons=刷新图标
refreshIconsDescription=将所有可用的 1000 多个图标检索、渲染并缓存为 .png 文件。这可能需要一段时间...
#custom
vaultUserLegacy=Vault 用户（有限旧版兼容模式）
upgradeInstructions=升级说明
externalActionTitle=外部操作请求
#custom
externalActionContent=检测到一个外部操作请求。是否允许从 XPipe 外部启动操作？
#custom
noScriptStateAvailable=刷新以检测脚本兼容性…
documentationDescription=查看文档
customEditorCommandInTerminal=在终端中运行自定义命令
customEditorCommandInTerminalDescription=如果编辑器是基于终端的，可以启用此选项自动打开终端，并在终端会话中运行命令。\n\nvi、vim、nvim 等编辑器都可以使用该选项。
#custom
disableApiHttpsTlsCheck=禁用 API HTTPS 证书验证
#custom
disableApiHttpsTlsCheckDescription=若机构防火墙使用 SSL/TLS 拦截导致证书被替换，更新或许可证校验可能因证书不匹配失败。启用此项以跳过 TLS 证书验证（存在风险，勿在不受信网络长期开启）。
connectionsSelected=$NUMBER$ 选定的连接
addConnections=添加连接
browseDirectory=浏览目录
openTerminal=打开终端
#custom
documentation=帮助文档
report=报告错误
#custom
keePassXcNotAssociated=KeePassXC 未关联
#custom
keePassXcNotAssociatedDescription=XPipe 尚未与本地 KeePassXC 数据库关联。点击下方按钮执行一次性授权，之后即可检索密码。
#custom
keePassXcAssociated=KeePassXC 已关联
#custom
keePassXcAssociatedDescription=XPipe 已连接到本地 KeePassXC 数据库。
#custom
keePassXcNotAssociatedButton=关联
identifier=标识符
passwordManagerCommand=自定义命令
#custom
passwordManagerCommandDescription=获取密码时执行的命令。占位符 $KEY 会替换为带引号的条目标识。命令需将密码直接打印到 stdout，例如：mypassmgr get $KEY。
chooseTemplate=选择模板
#custom
keePassXcPlaceholder=KeePassXC Entry URL
terminalEnvironment=终端环境
#custom
terminalEnvironmentDescription=可选本地 Linux WSL 发行版作为终端环境，用其能力定制终端。\n\n自定义启动命令与多路复用器配置将于该发行版中执行。
#custom
terminalInitScript=终端初始化脚本
#custom
terminalInitScriptDescription=在连接建立前于终端环境执行的命令，用于初始化环境。
#custom
terminalMultiplexer=终端复用器
#custom
terminalMultiplexerDescription=作为终端标签页的替代所使用的终端复用器。启用后，它会用复用器功能替换部分终端处理特性（如标签页处理）。\n\n需要在该系统上已安装对应复用器的可执行文件。
#custom
terminalMultiplexerWindowsDescription=作为终端标签页的替代所使用的终端复用器。启用后，它会用复用器功能替换部分终端处理特性（如标签页处理）。\n\n在 Windows 上需使用 WSL 终端环境，并在对应的 WSL 版本中安装该复用器的可执行文件。
#custom
terminalAlwaysPauseOnExit=退出时总是暂停
#custom
terminalAlwaysPauseOnExitDescription=启用后，退出终端会话时将始终提示你选择重新启动或关闭该会话。禁用时，XPipe 仅在连接失败并以错误退出时才会提示。
querying=查询...
retrievedPassword=获得：$PASSWORD$
refreshOpenpubkey=刷新 openpubkey 身份
#custom
refreshOpenpubkeyDescription=运行 opkssh refresh 以重新使 openpubkey 身份生效
all=全部
#custom
terminalPrompt=终端美化工具
#custom
terminalPromptDescription=用于远程终端的美化工具。启用后，首次打开会话会在目标系统自动部署和配置。\n\n不会修改已有提示配置，但初次加载时间会稍长。可能需安装 Nerd Fonts 以正确显示符号。
#custom
terminalPromptConfiguration=终端美化工具配置
#custom
terminalPromptConfig=配置文件内容
#custom
terminalPromptConfigDescription=自定义配置文件；终端初始化时自动部署为默认配置。若保留默认行为可留空。
passwordManagerKey=密码管理器密钥
#custom
passwordManagerKeyDescription=密码管理器中此机密项的标识符
passwordManagerAgent=密码管理器代理
dockerComposeProject.displayName=Docker compose 项目
dockerComposeProject.displayDescription=将组成项目的容器组合在一起
#custom
sshVerboseOutput=启用 SSH 调试输出
sshVerboseOutputDescription=通过 SSH 连接时，它会打印大量调试信息。有助于排除 SSH 连接的故障。
dontUseGateway=不要使用网关
dontUseGatewayDescription=不要将管理程序主机用作 SSH 网关，而应直接连接到 IP
categoryColor=类别 颜色
categoryColorDescription=该类别中的连接使用的默认颜色
#custom
categorySync=与 Git 仓库同步
#custom
categorySyncDescription=自动将该类别下的所有连接与 Git 仓库同步。本地更改会在保存时推送到远程。
categoryDontAllowScripts=禁用脚本
#custom
categoryDontAllowScriptsDescription=禁止在此类别内的系统上创建脚本，以避免任何文件系统修改。此操作将禁用全部脚本功能、Shell 环境命令、提示符等。
categoryConfirmAllModifications=确认所有修改
#custom
categoryConfirmAllModificationsDescription=在对连接或文件系统执行任何类型的修改前要求确认，可防止在关键系统上发生意外操作。
categoryDefaultIdentity=默认身份
categoryDefaultIdentityDescription=如果您经常在本类别中的许多系统上使用某个身份，那么设置默认身份可以让您在创建新连接时预先选择该身份。
categoryConfigTitle=$NAME$ 配置
configure=配置
addConnection=添加连接
#custom
noCompatibleConnection=未找到兼容的连接
newCategory=新类别
dockerComposeRestricted=该 compose 项目受$NAME$ 限制，不能从外部修改。请使用$NAME$ 管理此撰写项目。
restricted=限制级
disableSshPinCaching=禁用 SSH PIN 缓存
disableSshPinCachingDescription=当使用某种形式的基于硬件的身份验证时，XPipe 将自动缓存为密钥输入的任何 PIN 码。\n\n禁用此功能将导致每次尝试连接时都必须重新输入 PIN 码。
#custom
gitSyncPull=拉取远程 Git 仓库更改以同步
enpassVaultFile=保险库文件
#custom
enpassVaultFileDescription=本地 Enpass Vault 主文件。
flat=扁平
recursive=递归
rdpAllowListBlocked=所选 RemoteApp 似乎不在服务器的 RDP 允许列表中。
psonoServerUrl=服务器 URL
#custom
psonoServerUrlDescription=Psono 后端服务器 URL
#custom
psonoApiKey=API Key
#custom
psonoApiKeyDescription=用于访问的 API Key（UUID 格式）
#custom
psonoApiSecretKey=API Secret Key
#custom
psonoApiSecretKeyDescription=以 64 位十六进制字符串表示的 Secret Key
#custom
focusWindowOnNotifications=通知时将 XPipe 置于前台
#custom
focusWindowOnNotificationsDescription=当出现通知或错误消息时将 XPipe 前置到最前，例如连接或隧道意外终止时。
gitUsername=Git 用户名
gitUsernameDescription=认证到 git 远程仓库的用户。只有当本地 git CLI 客户端没有在凭证助手中配置默认用户时，才会使用此设置。
gitPassword=Git 密码/个人访问令牌
gitPasswordDescription=用于身份验证的密码或个人访问令牌。是否需要密码或个人访问令牌取决于 git 远程提供者。只有当本地 git CLI 客户端没有在凭证助手中配置默认密码时，才会使用此设置。
setReadOnly=设置只读
unsetReadOnly=未设置只读
#custom
readOnlyStoreError=此条目配置已锁定。使用不同名称另存为副本即可修改。
categoryFreeze=冻结连接配置
categoryFreezeDescription=将连接配置标记为只读。这意味着不能修改该类别中的任何现有连接条目配置。但可以添加新连接。
#custom
updateFail=更新安装失败
updateFailAction=手动安装更新
updateFailActionDescription=在 GitHub 上查看最新版本
onePasswordPlaceholder=项目名称
computeDirectorySizes=计算目录大小
computeSize=计算大小
vncClient=VNC 客户端
vncClientDescription=在 XPipe 中打开 VNC 连接时要启动的 VNC 客户端。\n\n您可以选择使用 XPipe 中集成的 VNC 客户端，或者启动一个本地安装的外部 VNC 客户端（如果您需要更多自定义功能）。
integratedXPipeVncClient=集成 XPipe VNC 客户端
customVncCommand=自定义命令
customVncCommandDescription=启动 VNC 会话时要执行的自定义命令。调用时，占位符字符串 $ADDRESS 将被带引号的地址替换。
vncConnections=VNC 连接
passwordManagerIdentity=密码管理器身份
passwordManagerIdentity.displayName=密码管理器身份
passwordManagerIdentity.displayDescription=从密码管理器中读取身份的用户名和密码
useAsJumpServer=跳转服务器
useAsJumpServerDescription=本系统是与 ProxyJump 一起使用的跳转服务器
passwordCopied=连接密码复制到剪贴板
errorOccurred=发生错误
actionMacro.displayName=动作宏
actionMacro.displayDescription=使用自定义触发器运行
macroAdd=添加宏
macroName=宏名称
macroNameDescription=为该宏自定义名称
actionId=动作 ID
actionIdDescription=使用此宏运行的操作
macroRefs=相关连接
macroRefsDescription=运行操作的连接
connectionCopy=复制
actionPickerTitle=挑选操作
actionPickerDescription=单击某物可执行操作。您可以在操作快捷方式选择模式下创建和编辑该操作的快捷方式，而不是执行该操作。
cancelActionPicker=取消操作选择
actionShortcut=快捷操作
actionShortcuts=快捷操作
actionStore=动作存储
actionStoreDescription=运行操作的存储条目
actionStores=动作存储
actionStoresDescription=运行操作的存储条目
actionDesktopShortcut=桌面快捷方式
actionDesktopShortcutDescription=在桌面上创建此操作的快捷方式
actionUrlShortcut=URL 快捷方式
actionUrlShortcutDescription=复制打开时可触发此操作的 URL
actionUrlShortcutDisabled=URL 快捷方式（不可用）
actionUrlShortcutDisabledDescription=$TYPE$ 安装类型不支持打开 URL
actionApiCall=应用程序接口请求
actionApiCallDescription=从 HTTP API 调用此操作
actionMacro=动作宏
actionMacroDescription=为此操作创建一个具有高级功能的宏
createMacro=创建宏
actionConfiguration=参数
actionConfigurationDescription=传递给执行操作的参数
confirmAction=确认操作
actionConnections=操作连接
actionConnectionsDescription=运行操作的连接
actionConnection=动作连接
actionConnectionDescription=运行操作的连接
#custom
appleContainerInstall.displayName=Apple 容器
#custom
appleContainerInstall.displayDescription=通过容器 CLI 访问 Apple 容器实例
#custom
appleContainer.displayName=Apple 容器
#custom
appleContainer.displayDescription=通过容器 CLI 访问 Apple 容器实例
#custom
appleContainerHostDescription=Apple 容器所在主机
#custom
appleContainerDescription=Apple 容器名称
#custom
appleContainers=Apple 容器
changeOrderIndexTitle=更改顺序
#custom
orderIndex=排序
#custom
orderIndexDescription=为此条目指定一个用于排序的数字；数值越小显示越靠前。
moveToFirst=移至首位
moveToLast=移至最后
category=类别
includeRoot=包括根
excludeRoot=排除根
freezeConfiguration=冻结配置
unfreezeConfiguration=解冻配置
waylandScalingTitle=Wayland 扩展
actionApiUrl=$URL$ (复制 json 正文)
copyBody=复制请求正文
gitRepoTerminalOpen=在终端打开仓库
#custom
gitRepoTerminalOpenDescription=在命令行中查看该仓库
gitRepoOverwriteLocal=覆盖本地仓库
gitRepoOverwriteLocalDescription=用远程更改替换所有本地更改
#custom
gitRepoForcePush=强制推送（覆盖）远程仓库
#custom
gitRepoForcePushDescription=使用 git push --force 将本地更改强制推送到远程
gitRepoTryAgain=再试一次
gitRepoTryAgainDescription=再次尝试相同的操作
#custom
gitRepoDisable=暂时禁用 Git 保险库
gitRepoDisableDescription=在此会话期间不要提交任何更改
#custom
gitRepoPullRefresh=拉取更改并刷新
gitRepoPullRefreshDescription=合并远程更改并重新加载数据
#custom
breakOutCategory=按分类拆分出新的连接类别
mergeCategory=合并类别
openWinScp=在 WinSCP 中打开
uninstallApplication=卸载
uninstallApplicationDescription=运行 .pkg 安装脚本以完全卸载 XPipe
k8sEditPodTitle=应用更改
k8sEditPodContent=您想应用通过 kubectl apply 命令作出的更改吗？可能需要重新启动才能应用更改。
virshEditDomainTitle=应用更改
virshEditDomainContent=要将更改应用到域中吗？可能需要重新启动才能应用更改。
pkcs11Library=PKCS#11 库
pkcs11LibraryDescription=动态链接库文件的路径
sshAgentSocket=自定义 SSH 代理插口
sshAgentSocketDescription=用于与 SSH 代理通信的自定义套接字。通过选择自定义代理选项，可将该自定义代理用于连接。
publicKey=公钥标识符
publicKeyDescription=可选的公钥，用于强制代理只提供匹配的私钥
actions=行动
#custom
hcloudServer.displayName=Hetzner 云服务器
#custom
hcloudServer.displayDescription=通过 SSH 访问 Hetzner Cloud 上托管的服务器
#custom
hcloudInstall.displayName=Hetzner 云 CLI
#custom
hcloudInstall.displayDescription=使用 hcloud CLI 管理 Hetzner Cloud 上的服务器
hcloudContext.displayName=云上下文
#custom
hcloudContext.displayDescription=该云环境内可访问的服务器集合
#custom
metrics=统计
openInVsCode=在 VsCode 中打开
addCloud=云计算 ...
#custom
hcloudToken=API Token
#custom
hcloudTokenDescription=用于访问 Hetzner Cloud 的 API Token（参见官方文档）
#custom
hcloudLogin=Hetzner 云登录
#custom
clearHcloudToken=清除 Token
#custom
clearHcloudTokenDescription=删除当前 Token 以重新登录
selectIdentity=选择身份
#custom
enableMcpServer=启用 MCP 服务端
#custom
enableMcpServerDescription=启动 XPipe 的 MCP 服务端，允许外部 MCP 客户端发送请求。下方提供连接配置。\n\n注意：MCP 与 HTTP API 相互独立，无需启用 HTTP API 即可使用。
#custom
enableMcpMutationTools=启用 MCP 修改工具
#custom
enableMcpMutationToolsDescription=默认仅启用只读工具以避免意外更改系统。\n\n若需通过 MCP 客户端执行会修改系统的操作，请先确认客户端具备针对破坏性行为的交互确认，再开启此选项。开启后需让已连接的 MCP 客户端重新连接生效。
mcpClientConfigurationDetails=MCP 客户端配置
#custom
mcpClientConfigurationDetailsDescription=使用以下配置数据从选定 MCP 客户端连接到 XPipe MCP 服务端。
switchHostAddress=交换机主机地址
addAnotherHostName=添加另一个主机名
addNetwork=网络扫描 ...
networkScan=网络扫描
#custom
networkScanStore=扫描目标
#custom
networkScanStoreDescription=扫描本地网段以发现运行 SSH 服务的主机
useAsGateway=使用主机作为网关
useAsGatewayDescription=是否将目标主机用作创建 SSH 连接的网关
networkScanPorts=扫描端口
#custom
networkScanPortsDescription=需要包含在扫描中的以逗号分隔的 SSH 端口列表
emptyDirectory=此目录看起来是空的
hcloudConfigFile=hcloud 配置文件
hcloudConfigFileDescription=hcloud CLI .toml 配置文件的位置
preferMonochromeIcons=首选单色图标
preferMonochromeIconsDescription=启用后，单色图标变量将优先于默认的彩色图标版本，前提是来源图标有单独的浅色或深色模式图标变量。\n\n需要刷新图标才能应用。
alwaysShowSshMotd=始终显示 MOTD
#custom
alwaysShowSshMotdDescription=登录新终端会话时始终显示远程系统的每日消息 (MOTD)。更改此项可能影响 SSH 连接的初始化流程。
manageSubscription=管理订阅
noListeningSshServer=无监听 SSH 服务器
networkScanResults=扫描结果
#custom
networkScanResultsDescription=扫描发现的主机列表
#custom
localShellDialect=本地 Shell
#custom
localShellDialectDescription=用于本地操作的 Shell。如果正常的本地默认 Shell 在某种程度上被禁用或损坏，则可使用此选项返回到另一种选择。\n\n某些配置（如自定义 PATH 条目）如果尚未在相应的 Shell 配置文件中配置，则可能不适用于备用 shell。
agentSocketNotFound=未找到活动代理插口
agentSocket=插座位置
agentSocketNotConfigured=尚未配置自定义套接字
downloadInProgress=$NAME$ 下载中
enableTerminalStartupBell=启用终端启动铃声
enableTerminalStartupBellDescription=在新终端会话中播放蜂鸣/铃声命令。如果你的终端模拟器支持铃声，就可以用它来更容易地识别新启动的终端实例。
